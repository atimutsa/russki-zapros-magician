import { useState } from "react";
import { Play, Pause, Volume2 } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";

interface AudioSample {
  id: string;
  name: string;
  description: string;
  audioUrl: string;
}

const audioSamples: AudioSample[] = [
  {
    id: "female-voice",
    name: "–ñ–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å - –ê–Ω–Ω–∞",
    description: "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π",
    audioUrl: "/audio/female-voice-sample.mp3" // –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞
  },
  {
    id: "male-voice", 
    name: "–ú—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å - –ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
    description: "–£–≤–µ—Ä–µ–Ω–Ω—ã–π –º—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
    audioUrl: "/audio/male-voice-sample.mp3" // –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞
  },
  {
    id: "assistant-voice",
    name: "–ì–æ–ª–æ—Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ - –ú–∞—Ä–∏—è", 
    description: "–ü—Ä–∏—è—Ç–Ω—ã–π –≥–æ–ª–æ—Å –¥–ª—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞",
    audioUrl: "/audio/assistant-voice-sample.mp3" // –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞
  }
];

const AudioDemo = () => {
  const [playingId, setPlayingId] = useState<string | null>(null);
  const [audioElements, setAudioElements] = useState<{ [key: string]: HTMLAudioElement }>({});

  const handlePlayPause = (sample: AudioSample) => {
    // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –¥—Ä—É–≥–∏–µ –∞—É–¥–∏–æ
    Object.values(audioElements).forEach(audio => {
      if (!audio.paused) {
        audio.pause();
      }
    });

    if (playingId === sample.id) {
      // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ
      setPlayingId(null);
      if (audioElements[sample.id]) {
        audioElements[sample.id].pause();
      }
    } else {
      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ
      let audio = audioElements[sample.id];
      if (!audio) {
        audio = new Audio(sample.audioUrl);
        audio.addEventListener('ended', () => setPlayingId(null));
        audio.addEventListener('error', () => {
          console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ: ${sample.audioUrl}`);
          setPlayingId(null);
        });
        setAudioElements(prev => ({ ...prev, [sample.id]: audio }));
      }
      
      setPlayingId(sample.id);
      audio.currentTime = 0;
      audio.play().catch(() => {
        console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ: ${sample.audioUrl}`);
        setPlayingId(null);
      });
    }
  };

  return (
    <section className="py-20 bg-gradient-to-br from-background via-background/50 to-primary/5">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-bold mb-4">
            –ö–∞–∫ –∑–≤—É—á–∞—Ç –Ω–∞—à–∏ –±–æ—Ç—ã?
          </h2>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            –ü–æ—Å–ª—É—à–∞–π—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –≥–æ–ª–æ—Å–æ–≤ –Ω–∞—à–∏—Ö –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤. –ö–∞–∂–¥—ã–π –≥–æ–ª–æ—Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.
          </p>
        </div>

        <div className="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto">
          {audioSamples.map((sample) => (
            <Card key={sample.id} className="group hover:shadow-lg transition-shadow duration-300">
              <CardHeader className="text-center pb-4">
                <div className="w-16 h-16 mx-auto mb-4 bg-primary/10 rounded-full flex items-center justify-center">
                  <Volume2 className="w-8 h-8 text-primary" />
                </div>
                <CardTitle className="text-xl">{sample.name}</CardTitle>
                <CardDescription className="text-sm">
                  {sample.description}
                </CardDescription>
              </CardHeader>
              
              <CardContent className="text-center">
                <Button
                  onClick={() => handlePlayPause(sample)}
                  variant="outline"
                  size="lg"
                  className="group-hover:bg-primary group-hover:text-primary-foreground transition-colors duration-300"
                >
                  {playingId === sample.id ? (
                    <>
                      <Pause className="w-5 h-5 mr-2" />
                      –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                    </>
                  ) : (
                    <>
                      <Play className="w-5 h-5 mr-2" />
                      –ü–æ—Å–ª—É—à–∞—Ç—å
                    </>
                  )}
                </Button>
                
                <p className="text-xs text-muted-foreground mt-3">
                  –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞
                </p>
              </CardContent>
            </Card>
          ))}
        </div>

        <div className="text-center mt-12">
          <p className="text-sm text-muted-foreground bg-muted/30 inline-block px-4 py-2 rounded-lg">
            üí° <strong>–°–æ–≤–µ—Ç:</strong> –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–∏ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É <code className="bg-background px-2 py-1 rounded text-xs">public/audio/</code> –∏ –æ–±–Ω–æ–≤–∏—Ç–µ –ø—É—Ç–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
          </p>
        </div>
      </div>
    </section>
  );
};

export default AudioDemo;